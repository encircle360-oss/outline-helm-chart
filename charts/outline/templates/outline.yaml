apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          env:
            - name: SECRET_KEY
              value: {{ .Values.secretKey | quote }}
            - name: UTILS_SECRET
              value: {{ .Values.utilsSecret | quote }}
            - name: PORT
              value: "3000"
            - name: COLLABORATION_URL
              value: ""
          {{ if .Values.ingress.tls.enabled }}
            - name: URL
              value: "https://{{ .Values.ingress.host }}"
          {{ else }}
            - name: URL
              value: "http://{{ .Values.ingress.host }}"
            - name: FORCE_HTTPS
              value: "false"
          {{ end }}
          {{ if .Values.postgresql.enabled }}
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgresql.postgresqlUsername}}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.postgresqlDatabase }}"
            - name: DATABASE_URL_TEST
              value: "postgres://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.postgresqlDatabase }}-test"
            - name: PGSSLMODE
              value: "disable"
          {{ end }}
          {{ if .Values.redis.enabled }}
            - name: REDIS_URL
              value: "redis://{{ .Release.Name }}-redis-master:6379"
          {{ end }}
          {{ if .Values.minio.enabled }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.minio.accessKey.password | quote }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.minio.secretKey.password | quote }}
            - name: AWS_REGION
              value: "us-east-1"
            {{ if .Values.minio.ingress.tls }}
            - name: AWS_S3_UPLOAD_BUCKET_URL
              value: "https://{{ .Values.minio.ingress.hostname }}"
            {{ else }}
            - name: AWS_S3_UPLOAD_BUCKET_URL
              value: "http://{{ .Values.minio.ingress.hostname }}"
            {{ end }}
            - name: AWS_S3_UPLOAD_BUCKET_NAME
              value: {{ .Values.minio.defaultBuckets | quote }}
            - name: AWS_S3_UPLOAD_MAX_SIZE
              value: "26214400"
            - name: AWS_S3_FORCE_PATH_STYLE
              value: "true"
            - name: AWS_S3_ACL
              value: "private"
          {{ end }}
          {{- if or $.Values.env $.Values.envSecrets }}
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $secret := $.Values.envSecrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret }}
                  key: {{ $key | quote }}
            {{- end }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          resources: {{- toYaml .Values.resources | nindent 12 }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    release: {{ .Release.Name }}
spec:
  ports:
    - port: 80
      targetPort: 3000
      name: web
  selector:
    app: {{ .Values.name }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}
  {{- if .Values.ingress.annotations }}
  annotations:
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ tpl $value $ | quote }}
  {{- end }}
  {{- end }}
spec:
  {{ if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ .Values.name }}-tls
  {{ end }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.name }}
                port:
                  name: web
