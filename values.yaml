name: outline
image:
  repository: outlinewiki/outline
  tag: ""
  pullPolicy: IfNotPresent

replicas: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

startupProbe:
  httpGet:
    path: /_health
    port: http
  failureThreshold: 10
  periodSeconds: 1

livenessProbe:
  httpGet:
    path: /_health
    port: http

readinessProbe:
  httpGet:
    path: /_health
    port: http

env:
  # SLACK_KEY: "slack key in slack oidc context"
  # SLACK_SECRET: "slack secret in slack oidc context"

envSecrets:
secretKey: "5974e36f82085f057223565ac2d0d01427a90248ade611108b4b937672649bd4" # MUST be replaced! Generate a hex-encoded 32-byte random key. You should use `openssl rand -hex 32`
utilsSecret: "8c5a14973325ba56694a99856e6be330812b875e5f683dd37022cf76444774bb" # Generate a unique random key. The format is not important but you could still use `openssl rand -hex 32`

ingress:
  enabled: true
  host: outline.yourdomain.tld
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    enabled: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

collaboration:
  enabled: false

  service:
    type: ClusterIP
    port: 80

  startupProbe: {}
  livenessProbe: {}
  readinessProbe: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}

redis:
  enabled: true
  architecture: "standalone"
  persistence:
    size: 2Gi
    storageClass: ""
  auth:
    enabled: false

postgresql:
  enabled: true
  architecture: "standalone"
  postgresqlDatabase: "outline"
  postgresqlUsername: "outline"
  postgresqlPassword: "vh4rf^q32BcvtFqFVjny4pnM" # MUST be replaced with some secret password! Don't use this in production
  postgresqlPostgresPassword: "Ma#wXFMz6jFqXUr^qP&K66XQbd" # MUST be replaced with some secret password! Don't use this in production
  persistence:
    enabled: true
    storageClass: ""
    size: 1Gi

minio:
  enabled: true
  disableWebUI: false
  ingress:
    enabled: true
    hostname: data.outline.yourdomain.tld
    certManager: false
    tls: false
    annotations:
      # cert-manager.io/cluster-issuer: "letsencrypt-staging"
  mode: "standalone"
  defaultBuckets: "ol-data" # should not be "outline" because of https://github.com/outline/outline/issues/2068
  secretKey:
    password: "Uk4LuwVFvRDiG6k4nYA5C^835V" # MUST be replaced with some custom generated secret! Don't use this in production
  accessKey:
    password: "zFPVNNK*QNp3^V4J38Gy76SehG" # MUST be replaced with some custom generated access_key! Don't use this in production
  persistence:
    enabled: true
    storageClass: ""
    size: 2Gi
